<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yz.mapper.JpushpersonMapper" >
  <resultMap id="BaseResultMap" type="com.yz.po.Jpushperson" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="picUrl" property="picurl" jdbcType="VARCHAR" />
    <result column="isTrue" property="istrue" jdbcType="INTEGER" />
    <result column="userrole_id" property="userroleId" jdbcType="INTEGER" />
    <result column="checkStartTime" property="checkstarttime" jdbcType="VARCHAR" />
    <result column="backCheckResultTime" property="backcheckresulttime" jdbcType="VARCHAR" />
    <result column="isOutOfTime" property="isoutoftime" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, idcard, realname, picUrl, isTrue, userrole_id, checkStartTime, backCheckResultTime, 
    isOutOfTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yz.po.JpushpersonExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jpushperson
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from jpushperson
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from jpushperson
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yz.po.JpushpersonExample" >
    delete from jpushperson
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yz.po.Jpushperson" >
    insert into jpushperson (id, idcard, realname, 
      picUrl, isTrue, userrole_id, 
      checkStartTime, backCheckResultTime, isOutOfTime
      )
    values (#{id,jdbcType=INTEGER}, #{idcard,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, 
      #{picurl,jdbcType=VARCHAR}, #{istrue,jdbcType=INTEGER}, #{userroleId,jdbcType=INTEGER}, 
      #{checkstarttime,jdbcType=VARCHAR}, #{backcheckresulttime,jdbcType=VARCHAR}, #{isoutoftime,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yz.po.Jpushperson" >
    insert into jpushperson
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="idcard != null" >
        idcard,
      </if>
      <if test="realname != null" >
        realname,
      </if>
      <if test="picurl != null" >
        picUrl,
      </if>
      <if test="istrue != null" >
        isTrue,
      </if>
      <if test="userroleId != null" >
        userrole_id,
      </if>
      <if test="checkstarttime != null" >
        checkStartTime,
      </if>
      <if test="backcheckresulttime != null" >
        backCheckResultTime,
      </if>
      <if test="isoutoftime != null" >
        isOutOfTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="picurl != null" >
        #{picurl,jdbcType=VARCHAR},
      </if>
      <if test="istrue != null" >
        #{istrue,jdbcType=INTEGER},
      </if>
      <if test="userroleId != null" >
        #{userroleId,jdbcType=INTEGER},
      </if>
      <if test="checkstarttime != null" >
        #{checkstarttime,jdbcType=VARCHAR},
      </if>
      <if test="backcheckresulttime != null" >
        #{backcheckresulttime,jdbcType=VARCHAR},
      </if>
      <if test="isoutoftime != null" >
        #{isoutoftime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yz.po.JpushpersonExample" resultType="java.lang.Integer" >
    select count(*) from jpushperson
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update jpushperson
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.idcard != null" >
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null" >
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.picurl != null" >
        picUrl = #{record.picurl,jdbcType=VARCHAR},
      </if>
      <if test="record.istrue != null" >
        isTrue = #{record.istrue,jdbcType=INTEGER},
      </if>
      <if test="record.userroleId != null" >
        userrole_id = #{record.userroleId,jdbcType=INTEGER},
      </if>
      <if test="record.checkstarttime != null" >
        checkStartTime = #{record.checkstarttime,jdbcType=VARCHAR},
      </if>
      <if test="record.backcheckresulttime != null" >
        backCheckResultTime = #{record.backcheckresulttime,jdbcType=VARCHAR},
      </if>
      <if test="record.isoutoftime != null" >
        isOutOfTime = #{record.isoutoftime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update jpushperson
    set id = #{record.id,jdbcType=INTEGER},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      realname = #{record.realname,jdbcType=VARCHAR},
      picUrl = #{record.picurl,jdbcType=VARCHAR},
      isTrue = #{record.istrue,jdbcType=INTEGER},
      userrole_id = #{record.userroleId,jdbcType=INTEGER},
      checkStartTime = #{record.checkstarttime,jdbcType=VARCHAR},
      backCheckResultTime = #{record.backcheckresulttime,jdbcType=VARCHAR},
      isOutOfTime = #{record.isoutoftime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yz.po.Jpushperson" >
    update jpushperson
    <set >
      <if test="idcard != null" >
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="picurl != null" >
        picUrl = #{picurl,jdbcType=VARCHAR},
      </if>
      <if test="istrue != null" >
        isTrue = #{istrue,jdbcType=INTEGER},
      </if>
      <if test="userroleId != null" >
        userrole_id = #{userroleId,jdbcType=INTEGER},
      </if>
      <if test="checkstarttime != null" >
        checkStartTime = #{checkstarttime,jdbcType=VARCHAR},
      </if>
      <if test="backcheckresulttime != null" >
        backCheckResultTime = #{backcheckresulttime,jdbcType=VARCHAR},
      </if>
      <if test="isoutoftime != null" >
        isOutOfTime = #{isoutoftime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yz.po.Jpushperson" >
    update jpushperson
    set idcard = #{idcard,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      picUrl = #{picurl,jdbcType=VARCHAR},
      isTrue = #{istrue,jdbcType=INTEGER},
      userrole_id = #{userroleId,jdbcType=INTEGER},
      checkStartTime = #{checkstarttime,jdbcType=VARCHAR},
      backCheckResultTime = #{backcheckresulttime,jdbcType=VARCHAR},
      isOutOfTime = #{isoutoftime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>